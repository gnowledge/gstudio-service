Installation steps of gstudio-service:

Install through pip in a Virtualenv

Perhaps the most flexible way to install Django on your system is with the virtualenv tool. This tool allows you to create virtual Python environments where you can install any Python packages you want without affecting the rest of the system. This allows you to select Python packages on a per-project basis regardless of conflicts with other project's requirements.

We will begin by installing pip from the Ubuntu repositories. Refresh your local package index before starting:

    sudo apt-get update

If you plan on using version 2 of Python, you can install pip by typing:

    sudo apt-get install python-pip

If, instead, you plan on using version 3 of Python, you can install pip by typing:

    sudo apt-get install python3-pip

Once pip is installed, you can use it to install the virtualenv package. If you installed the Python 2 pip, you can type:

    sudo pip install virtualenv

If you installed the Python 3 version of pip, you should type this instead:

    sudo pip3 install virtualenv

Now, whenever you start a new project, you can create a virtual environment for it. Start by creating and moving into a new project directory:

    mkdir ~/newproject
    cd ~/newproject

Now, create a virtual environment within the project directory by typing:

    virtualenv newenv

This will install a standalone version of Python, as well as pip, into an isolated directory structure within your project directory. We chose to call our virtual environment newenv, but you should name it something descriptive. A directory will be created with the name you select, which will hold the file hierarchy where your packages will be installed.

To install packages into the isolated environment, you must activate it by typing:

    source newenv/bin/activate

Your prompt should change to reflect that you are now in your virtual environment. It will look something like (newenv)username@hostname:~/newproject$.

Run a git clone command inside virtual environment,

git clone https://github.com/gnowledge/gstudio-service.git

In your new environment, you have to run following pip command for installing all required packages.

pip install -r requirements.txt

You can verify the django installation by typing:

    django-admin --version

Then, Go to gstudio-service/gstudio_service directory

Run the following command in manage.py level 
	
	python manage.py runserver

Open the following url in a browser:

	http://127.0.0.1:8000/

To leave your virtual environment, you need to issue the deactivate command:

    deactivate